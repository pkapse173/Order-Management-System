/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package OrganizationUI;


import customer.customer;
import deliveryPartner.deliveryPartner;
import deliveryPartner.deliveryPartnerDirectory;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import order.order;
import organization.organization;
import product.product;

/**
 *
 * @author pranavkapse
 */
public class ViewPendingOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewStudentRequestJPanel
     */
    
    JPanel CardContainer;
    organization userOrganization;
    order selectedOrder;
    deliveryPartnerDirectory deliveryPartnerList;
    
    public ViewPendingOrdersJPanel(JPanel CardContainer, organization userOrganization, order selectedOrder, deliveryPartnerDirectory deliveryPartnerList) {
        initComponents();
        this.CardContainer = CardContainer;
        this.userOrganization = userOrganization;
        this.selectedOrder = selectedOrder;
        this.deliveryPartnerList = deliveryPartnerList;
        
        populatePendingOrders();
        populateCBDeliveryPartner();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previousOrdersPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPreviousOrders = new javax.swing.JTable();
        btnAdminAccept = new javax.swing.JButton();
        btnAdminReject = new javax.swing.JButton();
        btnBackcourse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbDeliveryPartner = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        previousOrdersPanel.setBackground(new java.awt.Color(255, 255, 255));
        previousOrdersPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPreviousOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer Name", "Order Item", "Order Quantity", "Total Cost", "Order Status"
            }
        ));
        jScrollPane1.setViewportView(tblPreviousOrders);

        previousOrdersPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 630, 260));

        btnAdminAccept.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdminAccept.setText("Accept Order");
        btnAdminAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminAcceptActionPerformed(evt);
            }
        });
        previousOrdersPanel.add(btnAdminAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 140, 31));

        btnAdminReject.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdminReject.setText("Decline Order");
        btnAdminReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminRejectActionPerformed(evt);
            }
        });
        previousOrdersPanel.add(btnAdminReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, -1, 31));

        btnBackcourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/left-arrow (2).png"))); // NOI18N
        btnBackcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackcourseActionPerformed(evt);
            }
        });
        previousOrdersPanel.add(btnBackcourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 110, 40));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setText("Select Delivery Partner");
        previousOrdersPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, -1, -1));

        cbDeliveryPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDeliveryPartnerActionPerformed(evt);
            }
        });
        previousOrdersPanel.add(cbDeliveryPartner, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 490, 130, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel3.setText("Pending Orders");
        previousOrdersPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrganizationUI/org.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        previousOrdersPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, -3, 1420, 980));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(previousOrdersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(previousOrdersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminAcceptActionPerformed
        // TODO add your handling code here:
        
        Object searchBySelected = cbDeliveryPartner.getSelectedItem();
        String searchBySelectedString = searchBySelected.toString();
        
        if (searchBySelectedString.equals("Select delivery partner")){
            JOptionPane.showMessageDialog(this, "Please Select delivery partner");
            return;
        }
        
        ArrayList<deliveryPartner> DeliveryPartnerList = this.deliveryPartnerList.getDeliveryPartnerList();

        deliveryPartner selectedDeliveryPartner = null;
        
        for (deliveryPartner DeliveryPartner : DeliveryPartnerList){
            if (DeliveryPartner.getName().equals(searchBySelectedString)){
                selectedDeliveryPartner = DeliveryPartner;
                break;
            }
        }
        
        selectedOrder.setDeliveryPartner(selectedDeliveryPartner);
        selectedDeliveryPartner.addPendingOrder(selectedOrder);
        
        userOrganization.addCompletedOrder(selectedOrder);
        
        customer customerProfile = selectedOrder.getCustomerProfile();
        customerProfile.addToCompletedOrders(selectedOrder);
        customerProfile.setCurrentOrder(new order());
        selectedOrder.setStatus("Accepted");
        
        JOptionPane.showMessageDialog(this, "Order Accepted");
        
        //populatePendingOrders();
        
        DefaultTableModel model = (DefaultTableModel) tblPreviousOrders.getModel();
        model.setRowCount(0);
        
        tblPreviousOrders.removeAll();
  
    }//GEN-LAST:event_btnAdminAcceptActionPerformed

    private void btnAdminRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminRejectActionPerformed
        // TODO add your handling code here:

        selectedOrder.setStatus("Rejected");
        
        //juserOrganization.removePendingOrder(selectedOrder);
        userOrganization.addCompletedOrder(selectedOrder);
        
        customer customerProfile = selectedOrder.getCustomerProfile();
        //customerProfile.removeFromPendingOrders(selectedOrder);
        customerProfile.addToCompletedOrders(selectedOrder);
        
        for (product Product : selectedOrder.getOrderProductMap().keySet()){
            Product.setAvailibility(Product.getAvailibility() + selectedOrder.getOrderProductMap().get(Product));
        }
        
        JOptionPane.showMessageDialog(this, "Order rejected");
        
        populatePendingOrders();

    }//GEN-LAST:event_btnAdminRejectActionPerformed

    private void btnBackcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackcourseActionPerformed
        // TODO add your handling code here:
        CardContainer.remove(this);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.previous(CardContainer);

    }//GEN-LAST:event_btnBackcourseActionPerformed

    private void cbDeliveryPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDeliveryPartnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDeliveryPartnerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminAccept;
    private javax.swing.JButton btnAdminReject;
    private javax.swing.JButton btnBackcourse;
    private javax.swing.JComboBox<String> cbDeliveryPartner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel previousOrdersPanel;
    private javax.swing.JTable tblPreviousOrders;
    // End of variables declaration//GEN-END:variables

    private void populatePendingOrders() {
        
        DefaultTableModel model = (DefaultTableModel) tblPreviousOrders.getModel();
        model.setRowCount(0);
        
        HashMap<product, Integer> orderProductMap = selectedOrder.getOrderProductMap();
        
        for (product Product : orderProductMap.keySet()){
            Object[] row = new Object[5];
            row[0] = selectedOrder.getCustomerProfile().getName();
            row[1] = Product.getName();
            row[2] = orderProductMap.get(Product);
            row[3] = Product.getPrice() * orderProductMap.get(Product);
            row[4] = selectedOrder.getStatus();
            
            model.addRow(row);
            
        }
       
        
       
    }

    private void populateCBDeliveryPartner() {
        ArrayList<deliveryPartner> DeliveryPartnerList = this.deliveryPartnerList.getDeliveryPartnerList();
        cbDeliveryPartner.addItem("Select delivery partner");
        for (deliveryPartner DeliveryPartner : DeliveryPartnerList){
            cbDeliveryPartner.addItem(DeliveryPartner.getName());
        }
    }
        
}
