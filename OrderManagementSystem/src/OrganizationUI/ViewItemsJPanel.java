/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package OrganizationUI;


import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import organization.organization;
import product.product;

/**
 *
 * @author pranavkapse
 */
public class ViewItemsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewStudentRequestJPanel
     */
    
    JPanel CardContainer;
    organization userOrganization;
            
    public ViewItemsJPanel(JPanel CardContainer, organization userOrganization) {
        initComponents();
        this.CardContainer = CardContainer;
        this.userOrganization = userOrganization;
        populateItems();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewItemsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductList = new javax.swing.JTable();
        btnManageItem = new javax.swing.JButton();
        btnRemoveItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnBackcourse = new javax.swing.JButton();
        btnAddNewItem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtUpdateItemAvailability = new javax.swing.JTextField();
        txtUpdateItemCost = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        viewItemsPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewItemsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProductList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Item Type", "Item Cost", "Item Availability"
            }
        ));
        jScrollPane1.setViewportView(tblProductList);

        viewItemsPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 630, 260));

        btnManageItem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnManageItem.setText("Manage Item");
        btnManageItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageItemActionPerformed(evt);
            }
        });
        viewItemsPanel.add(btnManageItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 140, 31));

        btnRemoveItem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRemoveItem.setText("Remove Item");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });
        viewItemsPanel.add(btnRemoveItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 140, 31));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setText("Need to add new items?");
        viewItemsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 550, 210, 30));

        btnBackcourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/left-arrow (2).png"))); // NOI18N
        btnBackcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackcourseActionPerformed(evt);
            }
        });
        viewItemsPanel.add(btnBackcourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 110, 30));

        btnAddNewItem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddNewItem.setText("Add New Item");
        btnAddNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewItemActionPerformed(evt);
            }
        });
        viewItemsPanel.add(btnAddNewItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, 140, 31));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Update Item Availability:");
        viewItemsPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 170, 40));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText("Update Item Cost:");
        viewItemsPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 160, 40));

        txtUpdateItemAvailability.setEnabled(false);
        viewItemsPanel.add(txtUpdateItemAvailability, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, 160, 40));

        txtUpdateItemCost.setEnabled(false);
        viewItemsPanel.add(txtUpdateItemCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 160, 40));

        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        viewItemsPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, -1, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        viewItemsPanel.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 90, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrganizationUI/org.png"))); // NOI18N
        viewItemsPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-130, -190, 1620, 1450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewItemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewItemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblProductList.getSelectedRow();
        product selectedProduct = null;
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select the product");
            return;
        }
        
        ArrayList<product> ProductList = userOrganization.getOrganizationProducts();
        
        DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
        int productID = (int) model.getValueAt(selectedRowIndex, 0);
        
        for (product Product : ProductList){
            if (Product.getProductID() == productID){
                selectedProduct = Product;
                break;
            }
        }
        
        userOrganization.removeProductFromOrganization(selectedProduct);
        
        JOptionPane.showMessageDialog(this, "Product deleted");
        
        populateItems();

    }//GEN-LAST:event_btnRemoveItemActionPerformed

    private void btnManageItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageItemActionPerformed
        // TODO add your handling code here:
        
        txtUpdateItemAvailability.setEnabled(true);
        txtUpdateItemCost.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnManageItem.setEnabled(false);

    }//GEN-LAST:event_btnManageItemActionPerformed

    private void btnBackcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackcourseActionPerformed
        // TODO add your handling code here:
        CardContainer.remove(this);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.previous(CardContainer);
    }//GEN-LAST:event_btnBackcourseActionPerformed

    private void btnAddNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewItemActionPerformed
        // TODO add your handling code here:
        
        AddNewItemJPanel addNewItemJPanel = new AddNewItemJPanel(CardContainer, userOrganization);
        CardContainer.add("AddNewItemJPanel", addNewItemJPanel);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.next(CardContainer);
        
    }//GEN-LAST:event_btnAddNewItemActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblProductList.getSelectedRow();
        product selectedProduct = null;

        if (selectedRowIndex < 0) {
        JOptionPane.showMessageDialog(this, "Please select the product");
        return;
        }

        ArrayList<product> productList = userOrganization.getOrganizationProducts();

        DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
        int productID = (int) model.getValueAt(selectedRowIndex, 0);

        for (product product : productList) {
        if (product.getProductID() == productID) {
        selectedProduct = product;
        break;
    }
}

        try {
        // Validate and set the updated item cost
        int updatedItemCost = Integer.parseInt(txtUpdateItemCost.getText());
        if (updatedItemCost < 0) {
        JOptionPane.showMessageDialog(this, "Please enter a non-negative number for item cost");
        return;
    }
        selectedProduct.setPrice(updatedItemCost);

        // Validate and set the updated item availability
        int updatedItemAvailability = Integer.parseInt(txtUpdateItemAvailability.getText());
        if (updatedItemAvailability < 0) {
        JOptionPane.showMessageDialog(this, "Please enter a non-negative number for item availability");
        return;
    }
        selectedProduct.setAvailibility(updatedItemAvailability);
        } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter only numbers for item cost and availability");
        return;
}

        JOptionPane.showMessageDialog(this, "Product details updated");

        txtUpdateItemAvailability.setText("");
        txtUpdateItemCost.setText("");

        txtUpdateItemAvailability.setEnabled(false);
        txtUpdateItemCost.setEnabled(false);
        btnUpdate.setEnabled(false);

        btnManageItem.setEnabled(true);

        populateItems();

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateItems();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewItem;
    private javax.swing.JButton btnBackcourse;
    private javax.swing.JButton btnManageItem;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProductList;
    private javax.swing.JTextField txtUpdateItemAvailability;
    private javax.swing.JTextField txtUpdateItemCost;
    private javax.swing.JPanel viewItemsPanel;
    // End of variables declaration//GEN-END:variables

    private void populateItems() {
        
       DefaultTableModel model = (DefaultTableModel) tblProductList.getModel();
       model.setRowCount(0);
       
       ArrayList<product> OrganizationProducts = userOrganization.getOrganizationProducts();
        
        for (product Product : OrganizationProducts){
            Object[] row = new Object[5];
            row[0] = Product.getProductID();
            row[1] = Product.getName();
            row[2] = Product.getType();
            row[3] = Product.getPrice();
            row[4] = Product.getAvailibility();
            
            model.addRow(row);
            
        }
        
    }
        
}
