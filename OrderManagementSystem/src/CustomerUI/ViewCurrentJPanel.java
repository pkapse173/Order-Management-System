/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package CustomerUI;

import customer.customer;
import java.awt.CardLayout;
import java.awt.Container;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import order.order;
import product.product;

/**
 *
 * @author kaush
 */
public class ViewCurrentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewCurrentJPanel
     */
    JPanel CardContainer;
    customer userCustomer;

    ViewCurrentJPanel(JPanel CardContainer, customer userCustomer) {
        initComponents();
        this.CardContainer = CardContainer;
        this.userCustomer = userCustomer;
        
        populateCartTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtOrderTotal = new javax.swing.JTextField();
        btnBackcourse = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPay.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, 90, 40));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Product List");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 240, 50));

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Name", "Price", "Quantity", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCart);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 92, 550, 240));

        btnRemove.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, 90, 40));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Order Total:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, -1, -1));

        txtOrderTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderTotalActionPerformed(evt);
            }
        });
        add(txtOrderTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 360, 140, 40));

        btnBackcourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/left-arrow (2).png"))); // NOI18N
        btnBackcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackcourseActionPerformed(evt);
            }
        });
        add(btnBackcourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 110, 40));

        btnRefresh.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 100, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrganizationUI/main5.jpg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-410, -70, 1860, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
        
        order currentOrder = userCustomer.getCurrentOrder();
        
        if (currentOrder.getOrderProductMap().keySet().size() == 0){
            JOptionPane.showMessageDialog(this, "Please add products to cart");
            return;
        }
        
        userCustomer.addToPendingOrders(currentOrder);
        currentOrder.setStatus("Order Placed");
        currentOrder.getOrganizationProfile().getPendingOrders().add(currentOrder);
        
        userCustomer.setCurrentOrder(new order());
        populateCartTable();
        
        JOptionPane.showMessageDialog(this, "Order Placed");
        
        //userCustomer.setCurrentOrder(new order());
    }//GEN-LAST:event_btnPayActionPerformed

    private void txtOrderTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderTotalActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCart.getSelectedRow();
        order currentOrder = userCustomer.getCurrentOrder();
        product selectedProduct = null;
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select the product");
            return;
        }
        
        HashMap<product, Integer> orderProductMap = currentOrder.getOrderProductMap();
        
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        int productID = (int) model.getValueAt(selectedRowIndex, 0);
        
        for (product Product : orderProductMap.keySet()){
            if (Product.getProductID() == productID){
                selectedProduct = Product;
                break;
                }
        }   
        
        selectedProduct.setAvailibility(selectedProduct.getAvailibility() + orderProductMap.get(selectedProduct));
        
        orderProductMap.remove(selectedProduct);
        
        JOptionPane.showMessageDialog(this, "Product removed");
        
        populateCartTable();
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBackcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackcourseActionPerformed
        // TODO add your handling code here:
        CardContainer.remove(this);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.previous(CardContainer);
    }//GEN-LAST:event_btnBackcourseActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateCartTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackcourse;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCart;
    private javax.swing.JTextField txtOrderTotal;
    // End of variables declaration//GEN-END:variables

    private void populateCartTable() {
        
        int orderTotal = 0;
        
        order currentOrder = userCustomer.getCurrentOrder();
        
        HashMap<product, Integer> orderProductMap = currentOrder.getOrderProductMap();
        
        DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
        model.setRowCount(0);
                
        for (product Product : orderProductMap.keySet()){
            Object[] row = new Object[5];
            row[0] = Product.getProductID();
            row[1] = Product.getName();
            row[2] = Product.getPrice();
            row[3] = orderProductMap.get(Product);
            row[4] = Product.getPrice() * orderProductMap.get(Product);
            
            orderTotal += Product.getPrice() * orderProductMap.get(Product);
            
            model.addRow(row);
            
        }
        
        txtOrderTotal.setText(Integer.toString(orderTotal));
        
    }
}
