/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package CustomerUI;

import customer.customer;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import order.order;

/**
 *
 * @author kaush
 */
public class PreviousOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PreviousOrdersJPanel
     */
    JPanel CardContainer;
    customer userCustomer;

    PreviousOrdersJPanel(JPanel CardContainer, customer userCustomer) {
        initComponents();
        this.CardContainer = CardContainer;
        this.userCustomer = userCustomer;
        populatePreviousOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPreviousOrders = new javax.swing.JTable();
        btnBackcourse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPreviousOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Organization Name", "Enterprise", "Total Cost", "Order Status"
            }
        ));
        jScrollPane1.setViewportView(tblPreviousOrders);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 73, 630, 260));

        btnBackcourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/left-arrow (2).png"))); // NOI18N
        btnBackcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackcourseActionPerformed(evt);
            }
        });
        add(btnBackcourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 110, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OrganizationUI/main5.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-450, -60, 1940, 970));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackcourseActionPerformed
        // TODO add your handling code here:
        CardContainer.remove(this);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.previous(CardContainer);
    }//GEN-LAST:event_btnBackcourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackcourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPreviousOrders;
    // End of variables declaration//GEN-END:variables

    private void populatePreviousOrders() {
        
        DefaultTableModel model = (DefaultTableModel) tblPreviousOrders.getModel();
        model.setRowCount(0);
        
        ArrayList<order> pendingOrderList = userCustomer.getPendingOrders();
        
        for (order Order : pendingOrderList){
            Object[] row = new Object[5];
            row[0] = Order.getOrderID();
            row[1] = Order.getOrganizationProfile().getName();
            row[2] = Order.getEnterpriseProfile().getName();
            row[3] = Order.calculateOrderTotal(Order);
            row[4] = Order.getStatus();
            
            model.addRow(row);
            
        }
        
        ArrayList<order> pastOrderList = userCustomer.getCompletedOrders();
        
        for (order Order : pastOrderList){
            Object[] row = new Object[5];
            row[0] = Order.getOrderID();
            row[1] = Order.getOrganizationProfile().getName();
            row[2] = Order.getEnterpriseProfile().getName();
            row[3] = Order.calculateOrderTotal(Order);
            row[4] = Order.getStatus();
            
            model.addRow(row);
            
        }
    }
}
