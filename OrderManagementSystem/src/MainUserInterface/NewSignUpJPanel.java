/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MainUserInterface;

import customer.customer;
import customer.customerDirectory;
import enterprise.enterprise;
import enterprise.enterpriseDirectory;
import java.awt.CardLayout;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import organization.organization;
import organization.organizationDirectory;

/**
 *
 * @author pranavkapse
 */
public class NewSignUpJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewSignUpJPanel
     */
    
    JPanel CardContainer;
    customerDirectory customerList;
    enterpriseDirectory enterpriseList;
    organizationDirectory organizationList;
    
    public NewSignUpJPanel(JPanel CardContainer, customerDirectory customerList, enterpriseDirectory enterpriseList,
            organizationDirectory organizationList) {
        
        initComponents();
        this.CardContainer = CardContainer;
        this.customerList = customerList;
        this.organizationList = organizationList;
        this.enterpriseList = enterpriseList;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPassword = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        BtnCreate = new javax.swing.JButton();
        lblUserTitle = new javax.swing.JLabel();
        lblPassword1 = new javax.swing.JLabel();
        SelectRole = new javax.swing.JComboBox<>();
        lblPassword2 = new javax.swing.JLabel();
        txtConfirmedPassword = new javax.swing.JTextField();
        lblPassword3 = new javax.swing.JLabel();
        CBSelectEnterprise = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPhoneNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnBackcourse = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPassword.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPassword.setText("Password:");
        jPanel1.add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 460, -1, 40));

        lblUsername.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblUsername.setText("Username:");
        jPanel1.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 380, -1, 40));
        jPanel1.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 170, 40));

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 460, 170, 40));

        BtnCreate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        BtnCreate.setText("Create");
        BtnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateActionPerformed(evt);
            }
        });
        jPanel1.add(BtnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 540, 80, 40));

        lblUserTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        lblUserTitle.setText("New Registration for User");
        jPanel1.add(lblUserTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 450, 50));

        lblPassword1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPassword1.setText("Select Enterprise:");
        jPanel1.add(lblPassword1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, -1, 40));

        SelectRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Role", "Customer", "Enterprise", "Organization" }));
        SelectRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectRoleActionPerformed(evt);
            }
        });
        jPanel1.add(SelectRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 170, 42));

        lblPassword2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPassword2.setText("Confirmed Password:");
        jPanel1.add(lblPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, -1, 40));

        txtConfirmedPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmedPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(txtConfirmedPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 460, 170, 40));

        lblPassword3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblPassword3.setText("Role:");
        jPanel1.add(lblPassword3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, 40));

        CBSelectEnterprise.setEnabled(false);
        CBSelectEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBSelectEnterpriseActionPerformed(evt);
            }
        });
        jPanel1.add(CBSelectEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, 170, 42));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 170, 40));
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 220, 170, 40));
        jPanel1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 170, 40));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Name:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Email:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 230, -1, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Address:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));
        jPanel1.add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, 170, 40));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Phone Number:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, -1, 20));

        btnBackcourse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/left-arrow (2).png"))); // NOI18N
        btnBackcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackcourseActionPerformed(evt);
            }
        });
        jPanel1.add(btnBackcourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 90, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/online-6698352_1920.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1490, 1140));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1489, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 83, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1140, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void BtnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreateActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        if (username.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter username");
            return;
        }
        String name= txtName.getText();
        if (name.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter name");
            return;
        }
        
        String password= txtPassword.getText();
        if (password.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter password");
            return;
        }
        
        String confirmPassword= txtConfirmedPassword.getText();
        if (confirmPassword.equals("")){
            JOptionPane.showMessageDialog(null, "Please confirm password");
            return;
        }
        
        Object role = SelectRole.getSelectedItem();
        String selectedRole = role.toString();
        
        if (password.equals(confirmPassword) == false){
            JOptionPane.showMessageDialog(null, "Entered passwords do not match");
            return;
        }

        
        if (selectedRole.equals("Select Role")){
            JOptionPane.showMessageDialog(this, "Please select a role");
            return;
        }
        
        if (isPasswordValid(password) == false){
            JOptionPane.showMessageDialog(null, "Please set password as per guidelines");
            return;
        }
        
        //hashing password
        password = hashedPassword(password);
        
        //For Customer role-----------------------------------------
        
        if (selectedRole.equals("Customer")){
            boolean isCustomerUsernameUnique = customerList.isCustomerUsernameUnique(username);
            
            if (isCustomerUsernameUnique == false){
                JOptionPane.showMessageDialog(null, "This username already exist");
                return;
            }
                       
            customer Customer = customerList.addCustomer();
            
            Customer.setName(txtName.getText());
            Customer.setAddress(txtAddress.getText());
            Customer.setEmailID(txtEmail.getText());
            
            try{
                Integer.parseInt(txtPhoneNo.getText());
            }
            catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Please enter only integers in phone number");
                return;
            }
            Customer.setPhonenumber(txtPhoneNo.getText());
            Customer.setUsername(username);
            Customer.setPassword(password);
            
            JOptionPane.showMessageDialog(this, "Customer created");
            
            return;
        }
        
        //For Enterprise role----------------------------------------------
        
        if (selectedRole.equals("Enterprise")){
            boolean isEnterpriseUsernameUnique = enterpriseList.isEnterpriseUsernameUnique(username);
            
            if (isEnterpriseUsernameUnique == false){
                JOptionPane.showMessageDialog(null, "This username already exist");
                return;
            }
                        
            enterprise Enterprise = enterpriseList.addEnterprise();
            
            Enterprise.setUsername(username);
            Enterprise.setPassword(password);
            
            Enterprise.setName(txtName.getText());
            Enterprise.setAddress(txtAddress.getText());
            Enterprise.setEmail(txtEmail.getText());
            
            try{
                Integer.parseInt(txtPhoneNo.getText());
            }
            catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Please enter only integers in phone number");
                return;
            }
            Enterprise.setPhoneNumber(txtPhoneNo.getText());
            
            JOptionPane.showMessageDialog(this, "Enterprise created");
            
            return;
        }
        
        //For Organization role------------------------------------------
        
        if (selectedRole.equals("Organization")){
            
            Object enterpriseRole = CBSelectEnterprise.getSelectedItem();
            String selectedEnterpriseRole = enterpriseRole.toString();

            if (selectedEnterpriseRole.equals("Select Enterprise")){
                JOptionPane.showMessageDialog(this, "Please select enterprise");
                return;
            }
        
            boolean isOrganizationUsernameUnique = organizationList.isOrganizationUsernameUnique(username);
            
            if (isOrganizationUsernameUnique == false){
                JOptionPane.showMessageDialog(null, "This username already exist");
                return;
            }
            
            organization Organization = organizationList.addOrganization();
            
            enterprise selectedEnterprise = null;
            
            ArrayList<enterprise> EnterpriseList = enterpriseList.getEnterpriseList();
        
            for (enterprise Enterprise : EnterpriseList){
                if (Enterprise.getName().equals(selectedEnterpriseRole)){
                    selectedEnterprise = Enterprise;
                    break;
                }
            }
            
            Organization.setUsername(username);
            Organization.setPassword(password);
            Organization.setEnterpriseProfile(selectedEnterprise);
            selectedEnterprise.addOrganization(Organization);
            
            Organization.setName(txtName.getText());
            Organization.setAddress(txtAddress.getText());
            Organization.setEmailID(txtEmail.getText());
            
            try{
                Integer.parseInt(txtPhoneNo.getText());
            }
            catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Please enter only integers in phone number");
                return;
            }
            Organization.setPhonenumber(txtPhoneNo.getText());
            
            JOptionPane.showMessageDialog(this, "Organization created");
            
            return;
        }
        
        
    }//GEN-LAST:event_BtnCreateActionPerformed

    
    
    public boolean isPasswordValid(String password) {
        String regex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=])(?=\\S+$).{8,}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(password);
        return matcher.matches();
    }
    
    
    private void SelectRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectRoleActionPerformed
        // TODO add your handling code here:
        Object role = SelectRole.getSelectedItem();
        String selectedRole = role.toString();
        
        if (selectedRole.equals("Organization")){
            CBSelectEnterprise.setEnabled(true);
            populateCBSelectEnterprise();
            return;
        }
    }//GEN-LAST:event_SelectRoleActionPerformed

    private void txtConfirmedPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmedPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmedPasswordActionPerformed

    private void CBSelectEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBSelectEnterpriseActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CBSelectEnterpriseActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnBackcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackcourseActionPerformed
        // TODO add your handling code here:
        CardContainer.remove(this);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.previous(CardContainer);
    }//GEN-LAST:event_btnBackcourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCreate;
    private javax.swing.JComboBox<String> CBSelectEnterprise;
    private javax.swing.JComboBox<String> SelectRole;
    private javax.swing.JButton btnBackcourse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword1;
    private javax.swing.JLabel lblPassword2;
    private javax.swing.JLabel lblPassword3;
    private javax.swing.JLabel lblUserTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtConfirmedPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateCBSelectEnterprise() {
        ArrayList<enterprise> EnterpriseList = enterpriseList.getEnterpriseList();
        CBSelectEnterprise.addItem("Select Enterprise");
        for (enterprise Enterprise : EnterpriseList){
            CBSelectEnterprise.addItem(Enterprise.getName());
        }
    }

    private String hashedPassword(String password) {
        try {
 
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(password.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        }

        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }
}
