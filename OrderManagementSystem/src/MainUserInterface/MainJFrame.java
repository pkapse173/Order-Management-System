/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MainUserInterface;

import AdminUI.AdminmainJPanel;
import CustomerUI.CustomerJPanel;
import DeliveryPartnerUI.DeliveryPartnerLandingJPanel;
import EnterpriseUI.EnterpriseLandingJPanel;
import OrganizationUI.OrganisationLandingJPanel;
import OrganizationUI.ViewPendingOrdersJPanel;
import admin.admin;
import customer.customer;
import customer.customerDirectory;
import deliveryPartner.deliveryPartner;
import deliveryPartner.deliveryPartnerDirectory;
import enterprise.enterprise;
import enterprise.enterpriseDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import organization.organization;
import organization.organizationDirectory;
import product.product;
import feedback.QueryHistory;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/**
 *
 * @author pranavkapse
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame1
     */
    
    customerDirectory customerList;
    enterpriseDirectory enterpriseList;
    organizationDirectory organizationList;
    deliveryPartnerDirectory deliveryPartnerList;
    QueryHistory feedback;
    admin Admin = new admin();
    
    public MainJFrame() {
        initComponents();
        customerList = new customerDirectory();
        enterpriseList = new enterpriseDirectory();
        organizationList = new organizationDirectory();
        deliveryPartnerList = new deliveryPartnerDirectory();
        feedback = new QueryHistory();
        
        this.Admin.setUsername("Admin");
        this.Admin.setPassword(hashedPassword("Password@123"));
        
        HardCodedData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnSignUp = new javax.swing.JButton();
        boxRole = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        CardContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnAboutUs = new javax.swing.JButton();
        btnContactUs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(220);

        jPanel1.setBackground(new java.awt.Color(165, 210, 178));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 152, 43));

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 152, 43));

        btnLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        jPanel1.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 84, 35));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setText("New User?");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, -1, -1));

        btnSignUp.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSignUp.setText("Sign Up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });
        jPanel1.add(btnSignUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, 92, 39));

        boxRole.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        boxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Role", "Customer", "Enterprise", "Organization", "Delivery Partner", "Admin" }));
        boxRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxRoleActionPerformed(evt);
            }
        });
        jPanel1.add(boxRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("User Name:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 92, 20));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setText("Password:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 92, 32));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel5.setText("WELCOME TO ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 180, 36));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel6.setText("ONLINE ORDER ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel7.setText("MANAGEMENT");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 120, 103));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/gif.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(41, 41, 41))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 500, 230, 410));

        jSplitPane1.setLeftComponent(jPanel1);

        CardContainer.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(218, 242, 218));
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel4.setBackground(new java.awt.Color(255, 204, 204));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainUserInterface/e-commerce.jpg"))); // NOI18N

        btnAboutUs.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnAboutUs.setText("About Us");
        btnAboutUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutUsActionPerformed(evt);
            }
        });

        btnContactUs.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnContactUs.setText("Contact Us");
        btnContactUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContactUsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1103, 1103, 1103))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(btnAboutUs, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(btnContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAboutUs, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(66, 66, 66))
        );

        CardContainer.add(jPanel2, "card2");

        jSplitPane1.setRightComponent(CardContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        
        String username = txtUserName.getText();
        if (username.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter username");
            return;
        }
        
        String password= txtPassword.getText();
        if (password.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter password");
            return;
        }
        
        password = hashedPassword(password);
        
        Object role = boxRole.getSelectedItem();
        String selectedRole = role.toString();
        
        if (selectedRole.equals("Select Role")){
            JOptionPane.showMessageDialog(this, "Please select a role");
            return;
        }
        
        
        // Login for Customer--------------------------------
        
        if (selectedRole.equals("Customer")){
            
            ArrayList<customer> CustomerList = customerList.getCustomerList();
            boolean flag = false;
            customer userCustomer = null;

            for (customer Customer : CustomerList){
                String CustomerUsername = Customer.getUsername();
                if (CustomerUsername.equals(username)){
                    String CustomerPassword = Customer.getPassword();
                    if (CustomerPassword.equals(password)){
                        flag = true;
                        userCustomer = Customer;
                        break;
                    }
                }
            }

            if (flag == false){
                JOptionPane.showMessageDialog(this, "Invalid username or password");
                return;
            }
  
        
            CustomerJPanel customerJPanel = new CustomerJPanel(CardContainer, userCustomer, enterpriseList);
            CardContainer.add("CustomerJPanel", customerJPanel);
            CardLayout layout = (CardLayout) CardContainer.getLayout();
            layout.next(CardContainer);
    
            
        }
        
        // Login for Enterprise--------------------------------
        
        if (selectedRole.equals("Enterprise")){

            ArrayList<enterprise> EnterpriseList = enterpriseList.getEnterpriseList();
            boolean flag = false;
            enterprise userEnterprise = null;

            for (enterprise Enterprise : EnterpriseList){
                String EnterpriseUsername = Enterprise.getUsername();
                if (EnterpriseUsername.equals(username)){
                    String EnterprisePassword = Enterprise.getPassword();
                    if (EnterprisePassword.equals(password)){
                        flag = true;
                        userEnterprise = Enterprise;
                        break;
                    }
                }
            }

            if (flag == false){
                JOptionPane.showMessageDialog(this, "Invalid username or password");
                return;
            }
            
            //Add code for CardLayout here
            EnterpriseLandingJPanel enterpriseLandingJPanel = new EnterpriseLandingJPanel(CardContainer, userEnterprise, organizationList);
            CardContainer.add("EnterpriseLandingJPanel", enterpriseLandingJPanel);
            CardLayout layout = (CardLayout) CardContainer.getLayout();
            layout.next(CardContainer);
            
        }
        
        // Login for Organization--------------------------------
        
        if (selectedRole.equals("Organization")){
            
            ArrayList<organization> OrganizationList = organizationList.getOrganizationList();
            boolean flag = false;
            organization userOrganization = null;

            for (organization Organization : OrganizationList){
                String OrganizationUsername = Organization.getUsername();
                if (OrganizationUsername.equals(username)){
                    String OrganizationPassword = Organization.getPassword();
                    if (OrganizationPassword.equals(password)){
                        flag = true;
                        userOrganization = Organization;
                        break;
                    }
                }
            }

            if (flag == false){
                JOptionPane.showMessageDialog(this, "Invalid username or password");
                return;
            }
            
            OrganisationLandingJPanel organisationLandingJPanel = new OrganisationLandingJPanel(CardContainer, userOrganization, deliveryPartnerList);
            CardContainer.add("viewPendingOrdersJPanel", organisationLandingJPanel);
            CardLayout layout = (CardLayout) CardContainer.getLayout();
            layout.next(CardContainer);
        }
        
        // Login for Admin--------------------------------
        
        if (selectedRole.equals("Admin")){

            if (username.equals("Admin") && password.equals(hashedPassword("Password@123"))){
                //Add code for CardLayout here
                
                AdminmainJPanel adminmainJPanel = new AdminmainJPanel(CardContainer, customerList, enterpriseList, organizationList, deliveryPartnerList, feedback);
                CardContainer.add("AdminmainJPanel", adminmainJPanel);
                CardLayout layout = (CardLayout) CardContainer.getLayout();
                layout.next(CardContainer);
            
            }
            else{
                JOptionPane.showMessageDialog(this, "Invalid username or password");
                return;
            }
        }
        
        // Login for Delivery Partner--------------------------------
        
        if (selectedRole.equals("Delivery Partner")){

            ArrayList<deliveryPartner> DeliveryPartnerList = deliveryPartnerList.getDeliveryPartnerList();
            boolean flag = false;
            deliveryPartner userDeliveryPartner = null;

            for (deliveryPartner DeliveryPartner : DeliveryPartnerList){
                String DeliveryPartnerUsername = DeliveryPartner.getUsername();
                if (DeliveryPartnerUsername.equals(username)){
                    String DeliveryPartnerPassword = DeliveryPartner.getPassword();
                    if (DeliveryPartnerPassword.equals(password)){
                        flag = true;
                        userDeliveryPartner = DeliveryPartner;
                        break;
                    }
                }
            }

            if (flag == false){
                JOptionPane.showMessageDialog(this, "Invalid username or password");
                return;
            }
            
            //Add code for CardLayout here
            DeliveryPartnerLandingJPanel deliveryPartnerLandingJPanel = new DeliveryPartnerLandingJPanel(CardContainer, userDeliveryPartner);
            CardContainer.add("DeliveryPartnerLandingJPanel", deliveryPartnerLandingJPanel);
            CardLayout layout = (CardLayout) CardContainer.getLayout();
            layout.next(CardContainer);
            
        }

        
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        // TODO add your handling code here:
        NewSignUpJPanel newUserSignUpJPanel = new NewSignUpJPanel(CardContainer, customerList, enterpriseList, organizationList);
        CardContainer.add("NewSignUpJPanel", newUserSignUpJPanel);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.next(CardContainer);
    }//GEN-LAST:event_btnSignUpActionPerformed

    private void boxRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxRoleActionPerformed

    private void btnAboutUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutUsActionPerformed
        // TODO add your handling code here:
        AboutUsJPanel aboutUsJPanel = new AboutUsJPanel(CardContainer);
        CardContainer.add("AboutUsJPanel", aboutUsJPanel);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.next(CardContainer);
    }//GEN-LAST:event_btnAboutUsActionPerformed

    private void btnContactUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContactUsActionPerformed
        // TODO add your handling code here:
        ContactUsJPanel contactUsJPanel = new ContactUsJPanel(CardContainer, feedback);
        CardContainer.add("ContactUsJPanel", contactUsJPanel);
        CardLayout layout = (CardLayout) CardContainer.getLayout();
        layout.next(CardContainer);
    }//GEN-LAST:event_btnContactUsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CardContainer;
    private javax.swing.JComboBox<String> boxRole;
    private javax.swing.JButton btnAboutUs;
    private javax.swing.JButton btnContactUs;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    private void HardCodedData() {
       
        //Enterprise1: Amazon
        enterprise Enterprise1 = enterpriseList.addEnterprise();
        Enterprise1.setUsername("amazon");
        Enterprise1.setPassword(hashedPassword("Amazon@123"));
        Enterprise1.setName("Amazon");
        Enterprise1.setAddress("Seattle");
        Enterprise1.setEmail("amazonservices@amazon.com");
        Enterprise1.setPhoneNumber("8576008000");
        //Enterprise1 - Organization 1
        organization Organization1 = organizationList.addOrganization();      
        Organization1.setUsername("apple");
        Organization1.setPassword(hashedPassword("Apple@123"));
        Organization1.setName("Apple");
        Organization1.setAddress("California");
        Organization1.setEmailID("appleproducts@apple.com");
        Organization1.setPhonenumber("8579000100"); 
        Organization1.setEnterpriseProfile(Enterprise1);
        Enterprise1.addOrganization(Organization1);
         //Enterprise1 - Organization 2
        organization Organization2 = organizationList.addOrganization();     
        Organization2.setUsername("samsung");
        Organization2.setPassword(hashedPassword("Samsung@123"));
        Organization2.setName("Samsung");
        Organization2.setAddress("California");
        Organization2.setEmailID("samsungproducts@samsung.com");
        Organization2.setPhonenumber("8579002000");
        Organization2.setEnterpriseProfile(Enterprise1);
        Enterprise1.addOrganization(Organization2);
        //Enterprise1 - Org1 - Product
        product Product1 = new product();       
        Product1.setName("iPhone 15");
        Product1.setPrice(1000);
        Product1.setType("Mobile");
        Product1.setAvailibility(50);
        Product1.setProductOrganization(Organization1);
        Organization1.addProductToOrganization(Product1);
        //Enterprise1 - Org1 - Product
        product Product2 = new product();  
        Product2.setName("iWatch Gen 2");
        Product2.setPrice(250);
        Product2.setType("Watch");
        Product2.setAvailibility(75);
        Product2.setProductOrganization(Organization1);
        Organization1.addProductToOrganization(Product2);
        //Enterprise1 - Org1 - Product
        product Product3 = new product();  
        Product3.setName("AppleTv Model-X");
        Product3.setPrice(2000);
        Product3.setType("Television");
        Product3.setAvailibility(120);
        Product3.setProductOrganization(Organization1);
        Organization1.addProductToOrganization(Product3);
        //Enterprise1 - Org1 - Product
        product Product4 = new product();  
        Product4.setName("iPod");
        Product4.setPrice(100);
        Product4.setType("Music Listener");
        Product4.setAvailibility(40);
        Product4.setProductOrganization(Organization1);
        Organization1.addProductToOrganization(Product4);
        //Enterprise1 - Org2 - Product
        product Product5 = new product();
        Product5.setName("Washing Machine");
        Product5.setPrice(8000);
        Product5.setType("Laundry");
        Product5.setAvailibility(45);   
        Product5.setProductOrganization(Organization2);
        Organization2.addProductToOrganization(Product5);
        //Enterprise1 - Org2 - Product
        product Product6 = new product();
        Product6.setName("Microwave");
        Product6.setPrice(3000);
        Product6.setType("Kitchen");
        Product6.setAvailibility(30);
        Product6.setProductOrganization(Organization2);
        Organization2.addProductToOrganization(Product6);
        //Enterprise1 - Org2 - Product
        product Product7 = new product();
        Product7.setName("Dishwasher");
        Product7.setPrice(1500);
        Product7.setType("Kitchen");
        Product7.setAvailibility(100);
        Product7.setProductOrganization(Organization2);
        Organization2.addProductToOrganization(Product7);
        //Enterprise1 - Org2 - Product
        product Product8 = new product();
        Product8.setName("Electric Bulb - 10V");
        Product8.setPrice(50);
        Product8.setType("Home Appliance");
        Product8.setAvailibility(100);
        Product8.setProductOrganization(Organization2);
        Organization2.addProductToOrganization(Product8);

        //Enterprise2: StarMarket
        enterprise Enterprise2 = enterpriseList.addEnterprise();
        Enterprise2.setUsername("starmarket");
        Enterprise2.setPassword(hashedPassword("Startmarket@123"));
        Enterprise2.setName("StartMarket");
        Enterprise2.setAddress("Boston");
        Enterprise2.setEmail("starmarketservice@smarket.com");
        Enterprise2.setPhoneNumber("6402763721");
        //Enterprise2 - Organization 3
        organization Organization3 = organizationList.addOrganization();      
        Organization3.setUsername("organicpantry");
        Organization3.setPassword(hashedPassword("Organicpantry@123"));
        Organization3.setName("OrganicPantry");
        Organization3.setAddress("New York");
        Organization3.setEmailID("organicpantry@orgpantry.com");
        Organization3.setPhonenumber("6507862756"); 
        Organization3.setEnterpriseProfile(Enterprise2);
        Enterprise2.addOrganization(Organization3);
         //Enterprise2 - Organization 4
        organization Organization4 = organizationList.addOrganization();     
        Organization4.setUsername("freshfarms");
        Organization4.setPassword(hashedPassword("Freshfarms@123"));
        Organization4.setName("FreshFarms");
        Organization4.setAddress("Chicago");
        Organization4.setEmailID("freshfarms@ffgroceries.com");
        Organization4.setPhonenumber("9923207922");
        Organization4.setEnterpriseProfile(Enterprise2);
        Enterprise2.addOrganization(Organization4);
        //Enterprise2 - Org3 - Product
        product Product9 = new product();       
        Product9.setName("Quinoa Delight Cereal");
        Product9.setPrice(25);
        Product9.setType("Breakfast Food");
        Product9.setAvailibility(50);
        Product9.setProductOrganization(Organization3);
        Organization3.addProductToOrganization(Product9);
        //Enterprise2 - Org3 - Product
        product Product10 = new product();  
        Product10.setName("Blend Organic Coffee");
        Product10.setPrice(55);
        Product10.setType("Drinks");
        Product10.setAvailibility(80);
        Product10.setProductOrganization(Organization3);
        Organization3.addProductToOrganization(Product10);
        //Enterprise2 - Org3 - Product
        product Product11 = new product();  
        Product11.setName("Pink Salt Popcorn");
        Product11.setPrice(20);
        Product11.setType("Easy Food");
        Product11.setAvailibility(20);
        Product11.setProductOrganization(Organization3);
        Organization3.addProductToOrganization(Product11);
        //Enterprise2 - Org3 - Product
        product Product12 = new product();  
        Product12.setName("Dark Chocolate Bars");
        Product12.setPrice(190);
        Product12.setType("Easy Food");
        Product12.setAvailibility(40);
        Product12.setProductOrganization(Organization3);
        Organization3.addProductToOrganization(Product12);
        //Enterprise2 - Org4 - Product
        product Product13 = new product();
        Product13.setName("Organic Mangoes");
        Product13.setPrice(80);
        Product13.setType("Fruits");
        Product13.setAvailibility(25);   
        Product13.setProductOrganization(Organization4);
        Organization4.addProductToOrganization(Product13);
        //Enterprise2 - Org4 - Product
        product Product14 = new product();
        Product14.setName("Heirloom Tomatoes");
        Product14.setPrice(30);
        Product14.setType("Vegies");
        Product14.setAvailibility(20);
        Product14.setProductOrganization(Organization4);
        Organization4.addProductToOrganization(Product14);
        //Enterprise2 - Org4 - Product
        product Product15 = new product();
        Product15.setName("Grass-fed Milk");
        Product15.setPrice(5);
        Product15.setType("Healthy Food");
        Product15.setAvailibility(100);
        Product15.setProductOrganization(Organization4);
        Organization4.addProductToOrganization(Product15);
        //Enterprise2 - Org4 - Product
        product Product16 = new product();
        Product16.setName("Artisanal Bread");
        Product16.setPrice(50);
        Product16.setType("Breakfast Food");
        Product16.setAvailibility(100);
        Product16.setProductOrganization(Organization4);
        Organization4.addProductToOrganization(Product16);

        //Enterprise3: SpiceDelights
        enterprise Enterprise3 = enterpriseList.addEnterprise();
        Enterprise3.setUsername("spicedelights");
        Enterprise3.setPassword(hashedPassword("Spicedelights@123"));
        Enterprise3.setName("Spicedelights");
        Enterprise3.setAddress("San Jose");
        Enterprise3.setEmail("spicedelightsservice@sdelights.com");
        Enterprise3.setPhoneNumber("6904732498");
        //Enterprise3 - Organization 5
        organization Organization5 = organizationList.addOrganization();      
        Organization5.setUsername("currykingdom");
        Organization5.setPassword(hashedPassword("Currykingdom@123"));
        Organization5.setName("CurryKingdom");
        Organization5.setAddress("Dallas");
        Organization5.setEmailID("curryking@ckingdom.com");
        Organization5.setPhonenumber("9261937282"); 
        Organization5.setEnterpriseProfile(Enterprise3);
        Enterprise3.addOrganization(Organization5);
         //Enterprise3 - Organization 6
        organization Organization6 = organizationList.addOrganization();     
        Organization6.setUsername("indiantemptations");
        Organization6.setPassword(hashedPassword("Indiantemptations@123"));
        Organization6.setName("IndianTemptations");
        Organization6.setAddress("Phoenix");
        Organization6.setEmailID("indiantemptations@temptation.com");
        Organization6.setPhonenumber("5729372738");
        Organization6.setEnterpriseProfile(Enterprise3);
        Enterprise3.addOrganization(Organization6);
        //Enterprise3 - Org5 - Product
        product Product17 = new product();       
        Product17.setName("Butter Chicken");
        Product17.setPrice(110);
        Product17.setType("Main Course");
        Product17.setAvailibility(69);
        Product17.setProductOrganization(Organization5);
        Organization5.addProductToOrganization(Product17);
        //Enterprise3 - Org5 - Product
        product Product18 = new product();  
        Product18.setName("Vegetable Biryani");
        Product18.setPrice(150);
        Product18.setType("Main Course");
        Product18.setAvailibility(80);
        Product18.setProductOrganization(Organization5);
        Organization5.addProductToOrganization(Product18);
        //Enterprise3 - Org5 - Product
        product Product19 = new product();  
        Product19.setName("Palak Paneer");
        Product19.setPrice(220);
        Product19.setType("Special Type");
        Product19.setAvailibility(100);
        Product19.setProductOrganization(Organization5);
        Organization5.addProductToOrganization(Product19);
        //Enterprise3 - Org5 - Product
        product Product20 = new product();  
        Product20.setName("Mango Lassi");
        Product20.setPrice(90);
        Product20.setType("Sweet Dish");
        Product20.setAvailibility(40);
        Product20.setProductOrganization(Organization5);
        Organization5.addProductToOrganization(Product20);
        //Enterprise3 - Org6 - Product
        product Product21 = new product();
        Product21.setName("Paneer Butter Masala");
        Product21.setPrice(250);
        Product21.setType("Main Course");
        Product21.setAvailibility(127);   
        Product21.setProductOrganization(Organization6);
        Organization6.addProductToOrganization(Product21);
        //Enterprise3 - Org6 - Product
        product Product22 = new product();
        Product22.setName("Tandoori Kebabs");
        Product22.setPrice(160);
        Product22.setType("Main Course");
        Product22.setAvailibility(90);
        Product22.setProductOrganization(Organization6);
        Organization6.addProductToOrganization(Product22);
        //Enterprise3 - Org6 - Product
        product Product23 = new product();
        Product23.setName("Aloo Gobi");
        Product23.setPrice(110);
        Product23.setType("Basic Food");
        Product23.setAvailibility(56);
        Product23.setProductOrganization(Organization6);
        Organization6.addProductToOrganization(Product23);
        //Enterprise3 - Org6 - Product
        product Product24 = new product();
        Product24.setName("Gulab Jamun");
        Product24.setPrice(130);
        Product24.setType("Dessert Dish");
        Product24.setAvailibility(179);
        Product24.setProductOrganization(Organization6);
        Organization6.addProductToOrganization(Product24);


        //Enterprise4: FashionHub
        enterprise Enterprise4 = enterpriseList.addEnterprise();
        Enterprise4.setUsername("fashionhub");
        Enterprise4.setPassword(hashedPassword("fashionhub@123"));
        Enterprise4.setName("Fashionhub");
        Enterprise4.setAddress("Paris");
        Enterprise4.setEmail("fhub@fashionhub.com");
        Enterprise4.setPhoneNumber("6784683645");
        //Enterprise3 - Organization 7
        organization Organization7 = organizationList.addOrganization();      
        Organization7.setUsername("ethnic");
        Organization7.setPassword(hashedPassword("Ethnic@123"));
        Organization7.setName("EthnicElegance");
        Organization7.setAddress("Michigan");
        Organization7.setEmailID("EthnicElegance@eelegance.com");
        Organization7.setPhonenumber("6583741265"); 
        Organization7.setEnterpriseProfile(Enterprise4);
        Enterprise4.addOrganization(Organization7);
         //Enterprise3 - Organization 8
        organization Organization8 = organizationList.addOrganization();     
        Organization8.setUsername("cultural");
        Organization8.setPassword(hashedPassword("Cultural@123"));
        Organization8.setName("CulturalCharms");
        Organization8.setAddress("Florida");
        Organization8.setEmailID("CulturalCharms@cultural.com");
        Organization8.setPhonenumber("7649875623");
        Organization8.setEnterpriseProfile(Enterprise4);
        Enterprise4.addOrganization(Organization8);
        //Enterprise4 - Org7 - Product
        product Product25 = new product();       
        Product25.setName("Silk Sarees");
        Product25.setPrice(550);
        Product25.setType("Women Special");
        Product25.setAvailibility(69);
        Product25.setProductOrganization(Organization7);
        Organization7.addProductToOrganization(Product25);
        //Enterprise4 - Org7 - Product
        product Product26 = new product();  
        Product26.setName("Kurtas");
        Product26.setPrice(300);
        Product26.setType("Mens Special");
        Product26.setAvailibility(190);
        Product26.setProductOrganization(Organization7);
        Organization7.addProductToOrganization(Product26);
        //Enterprise4 - Org7 - Product
        product Product27 = new product();  
        Product27.setName("Printed Dupattas");
        Product27.setPrice(70);
        Product27.setType("Women Side wear");
        Product27.setAvailibility(180);
        Product27.setProductOrganization(Organization7);
        Organization7.addProductToOrganization(Product27);
        //Enterprise4 - Org7 - Product
        product Product28 = new product();  
        Product28.setName("Marriage Sherwani");
        Product28.setPrice(800);
        Product28.setType("Mens Special");
        Product28.setAvailibility(98);
        Product28.setProductOrganization(Organization7);
        Organization7.addProductToOrganization(Product28);
        //Enterprise4 - Org8 - Product
        product Product29 = new product();
        Product29.setName("Rajasthani Lehengas");
        Product29.setPrice(1200);
        Product29.setType("Ladies special");
        Product29.setAvailibility(400);   
        Product29.setProductOrganization(Organization8);
        Organization8.addProductToOrganization(Product29);
        //Enterprise4 - Org8 - Product
        product Product30 = new product();
        Product30.setName("Lucknowi Chikankari");
        Product30.setPrice(1100);
        Product30.setType("Ladies special");
        Product30.setAvailibility(200);
        Product30.setProductOrganization(Organization8);
        Organization8.addProductToOrganization(Product30);
        //Enterprise4 - Org8 - Product
        product Product31 = new product();
        Product31.setName("Phulkari Shawls");
        Product31.setPrice(250);
        Product31.setType("Winter Special");
        Product31.setAvailibility(300);
        Product31.setProductOrganization(Organization8);
        Organization8.addProductToOrganization(Product31);
        //Enterprise4 - Org8 - Product
        product Product32 = new product();
        Product32.setName("Leather Kolhapuris");
        Product32.setPrice(350);
        Product32.setType("Unisex Special");
        Product32.setAvailibility(600);
        Product32.setProductOrganization(Organization8);
        Organization8.addProductToOrganization(Product32);
        
        
        
        deliveryPartner DeliveryPartner1 = deliveryPartnerList.addDeliveryPartner();
        DeliveryPartner1.setName("UPS");
        DeliveryPartner1.setUsername("UPS");
        DeliveryPartner1.setPassword(hashedPassword("UPS@1234"));
        DeliveryPartner1.setPercentShare(7);
        
        deliveryPartner DeliveryPartner2 = deliveryPartnerList.addDeliveryPartner();
        DeliveryPartner2.setName("Fedex");
        DeliveryPartner2.setUsername("Fedex");
        DeliveryPartner2.setPassword(hashedPassword("Fedex@123"));
        DeliveryPartner2.setPercentShare(5);
        
        deliveryPartner DeliveryPartner3 = deliveryPartnerList.addDeliveryPartner();
        DeliveryPartner3.setName("Doordash");
        DeliveryPartner3.setUsername("Doordash");
        DeliveryPartner3.setPassword(hashedPassword("Doordash@12"));
        DeliveryPartner3.setPercentShare(4);
        
        deliveryPartner DeliveryPartner4 = deliveryPartnerList.addDeliveryPartner();
        DeliveryPartner4.setName("UberEats");
        DeliveryPartner4.setUsername("UberEats");
        DeliveryPartner4.setPassword(hashedPassword("UberEats@12"));
        DeliveryPartner4.setPercentShare(6);
        
        customer Customer1 = customerList.addCustomer();
        Customer1.setName("Kishor Kashid");
        Customer1.setUsername("kishor");
        Customer1.setPassword(hashedPassword("Kishor@1"));
        Customer1.setAddress("1163 Boylston Steet, Boston");
        Customer1.setEmailID("kishorkashid@gmail.com");
        Customer1.setPhonenumber("8574684567");
        
        customer Customer2 = customerList.addCustomer();
        Customer2.setName("Pranav Kapse");
        Customer2.setUsername("pranav");
        Customer2.setPassword(hashedPassword("Pranav@1"));
        Customer2.setAddress("California");
        Customer2.setEmailID("pranavkapse@hotmail.com");
        Customer2.setPhonenumber("6504374170");
        
        customer Customer3 = customerList.addCustomer();
        Customer3.setName("Kaushik");
        Customer3.setUsername("kaushik");
        Customer3.setPassword(hashedPassword("Kaushik@1"));
        Customer3.setAddress("Mission Mains, Boston");
        Customer3.setEmailID("kaushik@northeastern.edu");
        Customer3.setPhonenumber("8572374857");
        
        customer Customer4 = customerList.addCustomer();
        Customer4.setName("Akshay Datir");
        Customer4.setUsername("akshay");
        Customer4.setPassword(hashedPassword("Akshay@1"));
        Customer4.setAddress("Seattle");
        Customer4.setEmailID("akshaydatir@gmail.com");
        Customer4.setPhonenumber("8572374857");
    }
    
    
    private String hashedPassword(String password) {
        try {
 
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(password.getBytes());
            BigInteger no = new BigInteger(1, messageDigest);
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        }

        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }
}
